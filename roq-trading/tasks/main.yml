---

##############
### DOCKER ###
##############

- name: docker pull images
  become: true
  docker_image:
    name: "{{ item }}"
    http_timeout: 300
  with_items:
    - "roqtrading/roq-femasapi"
    - "roqtrading/roq-samples"
  tags:
  - roq-trading

#############
### CONDA ###
#############

- name: create conda environment file
  become: true
  template:
    src: "templates/conda-environment.yml"
    dest: "/trading/infra/conda-environment.yml"
    owner: trading
    group: trading
    mode: 0640
  tags:
  - roq-trading

- name: test existence of the roq conda environment
  become: true
  become_user: trading
  shell: /trading/infra/miniconda3/bin/conda env list | grep "^roq "
  register: conda_roq
  failed_when: ( conda_roq.rc not in [ 0, 1 ] )
  tags:
  - roq-trading

- name: create the roq conda environment
  become: true
  become_user: trading
  shell: /trading/infra/miniconda3/bin/conda env create -f /trading/infra/conda-environment.yml
  when: conda_roq.rc == 1
  tags:
  - roq-trading

##############
### CONFIG ###
##############

- name: create config directory per gateway
  become: true
  file:
    dest: "/trading/config/{{ item }}"
    state: directory
    owner: trading
    group: trading
    mode: 0750
  with_items:
    - "femasapi"
  tags:
  - roq-trading

# TODO(thraneh): rename config files and loop over gateways?
- name: create config files
  become: true
  template:
    src: "templates/femasapi-{{ item }}"
    dest: "/trading/config/femasapi/{{ item }}"
    owner: trading
    group: trading
    mode: 0640
  with_items:
    - "master.conf"
    - "users.conf"
    - "symbols.conf"
    - "accounts.conf"
    - "md_user.conf"
    - "trader.conf"
    - "order_templates.conf"
    - "variables.conf"
    - "license.conf"
  tags:
  - roq-trading

# - name: create scripts to start gateways
#   become: true
#   template:
#     src: "templates/roq-gateway.sh"
#     dest: "/trading/bin/roq-{{ item }}.sh"
#     owner: trading
#     group: trading
#     mode: 0750
#   with_items:
#     - "{{ gateways }}"
#   tags:
#   - roq-trading
# 
- name: NEW NEW NEW create scripts to start gateways
  become: true
  template:
    src: "templates/roq-gateway-new.sh"
    dest: "/trading/bin/roq-{{ item }}-new.sh"
    owner: trading
    group: trading
    mode: 0750
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: create run directories for gateways
  become: true
  file:
    path: "/trading/run/{{ item }}"
    state: directory
    owner: trading
    group: trading
    mode: 0750
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

###############
### CRONTAB ###
###############

# - name: create crontab entries for starting gateways
#   become: true
#   cron:
#     name: "roq-{{ item }}-start"
#     weekday: "1-5"
#     hour: 9
#     minute: 14
#     job: "/trading/bin/roq-{{ item }}.sh start >/dev/null 2>&1"
#     user: trading
#   with_items:
#     - "{{ gateways }}"
#   tags:
#   - roq-trading
# 
# - name: create crontab entries for stopping gateway
#   become: true
#   cron:
#     name: "roq-{{ item }}-stop"
#     weekday: "1-5"
#     hour: 15
#     minute: 16
#     job: "/trading/bin/roq-{{ item }}.sh stop >/dev/null 2>&1"
#     user: trading
#   with_items:
#     - "{{ gateways }}"
#   tags:
#   - roq-trading

###############
### SYSTEMD ###
###############

# https://unix.stackexchange.com/questions/265704/start-stop-a-systemd-service-at-specific-times

- name: create systemd service
  become: true
  template:
    src: "templates/roq-gateway-stop.service"
    dest: "/etc/systemd/system/roq-{{ item }}-stop.service"
    owner: root
    group: root
    mode: 0644
  register: gateway_stop_service
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: service -> systemctl daemon-reload
  become: true
  shell: systemctl daemon-reload
  when: gateway_stop_service.changed
  tags:
  - roq-trading

- name: disable gateway service
  become: true
  service:
    name: roq-{{ item }}-stop
    enabled: no
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: create systemd timer
  become: true
  template:
    src: "templates/roq-gateway-stop.timer"
    dest: "/etc/systemd/system/roq-{{ item }}-stop.timer"
    owner: root
    group: root
    mode: 0644
  register: gateway_stop_timer
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: timer -> systemctl daemon-reload
  become: true
  shell: systemctl daemon-reload
  when: gateway_stop_timer.changed
  tags:
  - roq-trading

- name: enable gateway timer
  become: true
  service:
    name: roq-{{ item }}-stop.timer
    enabled: yes
    state: started
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

# - name: start systemd timer
#   become: true
#   service:
#     name: roq-{{ item }}-stop.timer
#     state: started
#   when: gateway_timer.changed
#   with_items:
#     - "{{ gateways }}"
#   tags:
#   - roq-trading

- name: create systemd service
  become: true
  template:
    src: "templates/roq-gateway.service"
    dest: "/etc/systemd/system/roq-{{ item }}.service"
    owner: root
    group: root
    mode: 0644
  register: gateway_service
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: service -> systemctl daemon-reload
  become: true
  shell: systemctl daemon-reload
  when: gateway_service.changed
  tags:
  - roq-trading

- name: disable gateway service
  become: true
  service:
    name: roq-{{ item }}
    enabled: no
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: create systemd timer
  become: true
  template:
    src: "templates/roq-gateway.timer"
    dest: "/etc/systemd/system/roq-{{ item }}.timer"
    owner: root
    group: root
    mode: 0644
  register: gateway_timer
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: timer -> systemctl daemon-reload
  become: true
  shell: systemctl daemon-reload
  when: gateway_timer.changed
  tags:
  - roq-trading

- name: enable gateway timer
  become: true
  service:
    name: roq-{{ item }}.timer
    enabled: yes
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

- name: start systemd timer
  become: true
  service:
    name: roq-{{ item }}.timer
    state: started
  when: gateway_timer.changed
  with_items:
    - "{{ gateways }}"
  tags:
  - roq-trading

#################
### COLLECTOR ###
#################

- name: create daemon control script for collector
  become: true
  template:
    src: "templates/roq-collector.sh"
    dest: "/trading/bin/roq-collector.sh"
    owner: trading
    group: trading
    mode: 0750
  tags:
  - roq-trading

- name: create run directory for collector
  become: true
  file:
    path: "/trading/run/collector"
    state: directory
    owner: trading
    group: trading
    mode: 0750
  tags:
  - roq-trading

- name: create crontab entry for starting collector
  become: true
  cron:
    name: "roq-collector-start"
    weekday: "1-5"
    hour: 9
    minute: 14
    job: "/trading/bin/roq-collector.sh start >/dev/null 2>&1"
    user: trading
  tags:
  - roq-trading

- name: create crontab entry for stopping collector
  become: true
  cron:
    name: "roq-collector-stop"
    weekday: "1-5"
    hour: 15
    minute: 16
    job: "/trading/bin/roq-collector.sh stop >/dev/null 2>&1"
    user: trading
  tags:
  - roq-trading
