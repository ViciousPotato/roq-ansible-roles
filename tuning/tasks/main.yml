---

###############
### NETWORK ###
###############

# https://medium.com/@frjalex/linux-kernel-high-performance-networking-how-to-2d35f5900974
# https://serverfault.com/questions/623780/low-latency-tcp-settings-on-ubuntu
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_MRG/2/html/Realtime_Tuning_Guide/index.html

- name: kernel parameters for the network stack
  become: true
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
  - { name: "net.core.rmem_max", value: "1342177280" }
  - { name: "net.core.wmem_max", value: "1342177280" }
  - { name: "net.ipv4.tcp_rmem", value: "163840 3495200 268754560" }
  - { name: "net.ipv4.tcp_wmem", value: "163840 3495200 268754560" }
  - { name: "net.ipv4.udp_rmem_min", value: "163840 3495200 268754560" }
  - { name: "net.ipv4.udp_wmem_min", value: "163840 3495200 268754560" }
  - { name: "net.ipv4.tcp_mem", value: "268754560 268754560 268754560" }
  - { name: "net.ipv4.udp_mem", value: "268754560 268754560 268754560" }
  - { name: "net.core.netdev_max_backlog", value: "300000" }
  tags:
  - tuning
  - sysctl

######################
### CPU SCHEDULING ###
######################

# without this, we're not able to use the realtime scheduler from systemd (centos/7):
# https://stackoverflow.com/questions/46563332/docker-daemon-container-real-time-scheduling-with-ubuntu-linux-host

- name: kernel parameters for cpu scheduling
  become: true
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
  - { name: "kernel.sched_rt_runtime_us", value: "-1" }
  tags:
  - tuning
  - sysctl

#####################
### CPU FREQUENCY ###
#####################

# https://askubuntu.com/questions/1021748/set-cpu-governor-to-performance-in-18-04

- name: install cpufrequtils (debian)
  become: true
  apt:
    name: cpufrequtils
    state: present
  environment: "{{proxy_env | default({})}}"
  when: ansible_os_family == "Debian"
  tags:
  - tuning
  - cpufreq

- name: configure cpufrequtils for performance (debian)
  become: true
  template: src="templates/cpufrequtils"
    dest="/etc/default/cpufrequtils"
    owner=root group=root mode=0644
  when: ansible_os_family == "Debian"
  notify:
  - restart cpufrequtils
  tags:
  - tuning
  - cpufreq

- name: disable the ondemand service (debian)
  become: true
  service:
    name: ondemand
    state: stopped
  when: ansible_os_family == "Debian"
  tags:
  - tuning
  - cpufreq

# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/power_management_guide/cpufreq_setup
